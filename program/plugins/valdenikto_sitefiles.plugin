###############################################################################
#  Copyright (C) 2013 Chris Sullo
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; version 2
#  of the License only.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to
#  Free Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
###############################################################################
# PURPOSE:
# Look for interesting files based on site name/ip
###############################################################################
sub nikto_sitefiles_init {
    my $id = { name        => "sitefiles",
               full_name   => "Site Files",
               author      => "sullo",
               description => "Look for interesting files based on the site's IP/name",
               hooks       => { scan => { method => \&nikto_sitefiles, }, },
               copyright   => "2014 Chris Sullo"
               };

    return $id;
}

sub nikto_sitefiles {
    my ($mark) = @_;
    my (%flags, %files, %names);

    $names{ $mark->{'hostname'} } = 1;
    $names{ $mark->{'vhost'} }    = 1;

    foreach my $n (keys %names) {
        my $nn = $n;
        $nn =~ s/^www(?:\d+)?\.//;
        $names{$nn} = 1;
        $nn = $n;
        $nn =~ s/\./_/g;
        $names{$nn} = 1;
        my @bits = split(/\./, $n);
        my ($temp1, $temp2) = '';

        for (my $i = 0 ; $i <= $#bits ; $i++) {
            $names{ $bits[$i] } = 1;
            $temp1 .= $bits[$i];
            $temp2 .= '.' . $bits[$i];
            $temp2 =~ s/^\.//;
            $names{$temp1} = 1;
            $names{$temp2} = 1;
        }
    }
    $names{'backup'}        = 1;
    $names{'site'}          = 1;
    $names{'archive'}       = 1;
    $names{'database'}      = 1;
    $names{'dump'}          = 1;
    $names{ $mark->{'ip'} } = 1;

    foreach my $item (keys %names) {
        next if $item eq '';
        foreach my $ext (qw/jks cer pem zip tar tar.gz gz tgz tar.bz2 tar.lzma alz egg war sql/) {
            $files{"$item\.$ext"} = 1;
        }
    }

    foreach my $f (keys %files) {

        # trickery to test with both host header and without
        foreach my $flag (0 .. 1) {
            return if $mark->{'terminate'};
            my $msg = "";
            $flags{'nohost'} = $flag;
            if ($flag) {
                $msg = "(NOTE: requested by IP address).";
            }

            # request. flags passed will determine if hostname is used or not
            my ($res, $content, $error, $request, $response) =
              nfetch($mark, "/$f", "GET", "", "", \%flags, "sitefiles");

            if (($response->{'content-type'} =~ '/^application\//i')
                || (   ($res == 200)
                    && ($response->{'content-length'} > 0)
                    && ($response->{'content-type'} !~ '/^text\//i')
                    && (!is_404("/$f", $content, $res, $response->{'location'})))
                    ) {

                # alert
                add_vulnerability(
                              $mark,    "/$f: Potentially interesting backup/cert file found. $msg",
                              740001,   "https://cwe.mitre.org/data/definitions/530.html",
                              "HEAD",   "/$f",
                              $request, $response
                              );
                last;
            }
        }

    }
}

1;

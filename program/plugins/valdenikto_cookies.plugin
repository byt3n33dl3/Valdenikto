###############################################################################
#  Copyright (C) 2010 Chris Sullo
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; version 2
#  of the License only.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to
#  Free Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
###############################################################################
# PURPOSE:
# General HTTP cookie checks
###############################################################################
sub nikto_cookies_init {
    my $id = {
         name        => "cookies",
         full_name   => "HTTP Cookie Internal IP",
         author      => "Sullo",
         description => "Looks for internal IP addresses in cookies returned from an HTTP request.",
         hooks       => { postfetch => { method => \&nikto_cookies_postfetch, }, },
         copyright   => "2010 Chris Sullo"
         };

    # Store cookies to ensure we don't report multiple times.
    my %CFOUND;
    return $id;
}

sub nikto_cookies_postfetch {
    my ($mark, $parameters, $request, $response) = @_;

    if (!exists $response->{'set-cookie'}) {
        return $request, $response;
    }

    foreach my $c (@{ $response->{'whisker'}->{'cookies'} }) {
        my $c2 = $c;
        $c =~ /([^=]+)+=([^;]+)/;
        my $cname  = $1;
        my $cvalue = $2;
        next if (defined $CFOUND{$cname}{ $mark->{hostname} });

        # secure flag
        if ($c !~ /secure/i && $mark->{ssl}) {
            add_vulnerability($mark,
                              $request->{'whisker'}->{'uri'}
                                . ": Cookie $cname created without the secure flag",
                              999961,
                              "https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies",
                              $request->{'whisker'}->{'method'},
                              $request->{'whisker'}->{'uri'},
                              $request,
                              $response
                              );
        }

        # httponly flag
        if ($c !~ /httponly/i) {
            add_vulnerability($mark,
                              $request->{'whisker'}->{'uri'}
                                . ": Cookie $cname created without the httponly flag",
                              000137,
                              "https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies",
                              $request->{'whisker'}->{'method'},
                              $request->{'whisker'}->{'uri'},
                              $request,
                              $response
                              );
        }

        my @ips = get_ips($c);

        if (substr($cname, 0, 4) eq 'NSC_') {
            push(@ips, decode_netscaler_cookie($cvalue));
        }

        foreach my $ip (@ips) {
            my ($valid, $internal, $loopback) = is_ip($ip);
            if ($valid && !$loopback) {
                if ($ip ne $mark->{'ip'}) {
                    my $msg  = "";
                    my $refs = "";

                    if ($cname eq 'ARPT') {
                        $msg =
                          "Cisco content switch reveals internal IP address found in the '$cname' cookie. The IP is \"$ip\".";
                        $refs = "CVE-2006-4352";
                    }
                    else {

                        # is it an internal, or just different?
                        my $int;
                        if ($internal) { $int = "RFC-1918 "; }
                        $msg = $request->{'whisker'}->{'uri'}
                          . ": ${int}IP address found in the '$cname' cookie. The IP is \"$ip\".";
                    }
                    add_vulnerability($mark, $msg, 999991, $refs,
                                      $request->{'whisker'}->{'method'},
                                      $request->{'whisker'}->{'uri'},
                                      $request, $response);
                }
            }
        }
        $CFOUND{$cname}{ $mark->{hostname} } = 1;
    }
}

sub decode_netscaler_cookie {
    my ($cookie_val) = @_;
    $cookie_val =~ /[0-9a-f]{8}([0-9a-f]{8}).*([0-9a-f]{4})$/;
    my $ip_value   = hex($1) ^ 0x03081e11;
    my $port_value = hex($2) ^ 0x3630;

    $ip_hex_str      = sprintf("0x%X", $ip_value);
    $ip_hex_zero_pad = sprintf("%08s", substr($ip_hex_str, 2, 8));
    return
        hex('0x' . substr($ip_hex_zero_pad, 0, 2)) . "."
      . hex('0x' . substr($ip_hex_zero_pad, 2, 2)) . "."
      . hex('0x' . substr($ip_hex_zero_pad, 4, 2)) . "."
      . hex('0x' . substr($ip_hex_zero_pad, 6, 2));
}

1;
